	
	Pong game
	
	Phase 0:
	.. on paper and pencil
	make a coordinate map of the playing surface (probably a square)
	to discover the wall and goal positions and determine some needed constants
	(i.e. public static final int fields that can be accessed 
	  from any class like:	sideLength, apothem (which is sideLength / 2) etc. )
	
  Create a class Pong starting with the code from SimpleGame
  comment out the lines with the Ship reference
  (note: it implements the Game interface)
		
		
	Phase 1:
	Create a class called Court
	
	add fields..	ArrayLists of Rectangles for xWalls, yWalls and goals
	 (remember the goals must be in order for players: 1,2,3,4 )
	WHY BOTH X AND Y WALLS?
	if a Ball hits an xWall.. it will change its x direction
	if a Ball hits a yWall... it will change its y direction
	
	use the constants from Pong ..
	(try using a static import)
	suggested fields: wallLength, wallThickness, goalLength, etc.
	
	Create a constructor
	add new Rectangles for the xWalls, yWalls and goals
	(see the coordinate map that was drawn out)
	method updatePos() may not be needed since the Court is not moving
	render(Graphics2D g) is needed
	
	render the Court in class Pong in all gameStates
	(use the code that renders the Ship as a guide)
	
	YOU SHOULD SEE THE COURT!
	
	
	Phase 2:
	Create a class called Paddle 
	(similar to the Ship class in package nameSimpleGame)
	think of instance variables needed:
	//change Rectangle body to Rectangle2D.Double
	playerNum, paddleLength, paddleThickness etc. 
	
	write constructor (use the Ship constructor as a guide)
	work on the code for a single player 
	(i.e. paddle for player 4 which is across bottom of the screen)
  if (playerNum == 4) 
	    body = new Rectangle2D.Double( .. );//choose appropriate arguments
	
	method updatePos() 	
	determine how to determine the left/right ( in the future up/down )
	boundaries of the Paddle for player 4
	.. perhaps a fixed distance (apothem) from the center coordinate ??

	update body position based on kh status 
	
	write code in class Pong
	declare an ArrayList of Paddles in the constructor
	and add 1 new paddle for player 4

  update and render all Paddles (for-each loop) in all gameStates
  
  get everything working for one paddle (position and render) 
  before adding other paddles
  
  YOU SHOULD SEE A PADDLE MOVING WITH THE ARROW KEYS!
  
  Phase 3:
	Create a class called Ball
	
	similar fields, constructors and methods as Paddle
	note: xVelocity AND yVelocity are needed
	similar code needed in class Pong as with the Paddle
	(note: only update the position of the Ball in gameState.PLAYING

  Phase 4:
  add modifier methods to Ball to change the x and y directions
  and an accessor method getBody()
	
  add methods hitBall and hitGoal to class Court that have a Ball parameter
  where hitBall modifies the Ball the Ball's x or y velocity if there
  is in intersection with an x or y wall and 
  hitGoal either returns the player number for that goal or 0
  call hitBall and hitGoal in class Pong
 
  Phase 5:
  add method hitBall to class Paddle (similar to that in Court)
	call hitBall in class Pong
 
	Phase 6:
	write code in class Pong to update and render the scores
	suggested field: int array scores
	use hitGoal to change gameStates and increment appropriate score
	use lives variable (or something compatible) to set gameOver
	when a certain score is reached (i.e. some player has 5 points)
	
	Phase 7: (** challenging **)
	tweak the hitBall in Paddle (fix bugs)
	and add functionality to set the xVelocity and yVelocity 
	to change the direction of the Ball (and its speed) 
	based on where the Ball impacts the Paddle
	(max and min velocity constants needed in class Ball
	 and a modifier method setVelocities(double val) where
	 val is a value between -1.0 and 1.0 and represents the 
	 proportional distance from the center 0.0 of the Paddle
	 where the Ball impacted)

	
	